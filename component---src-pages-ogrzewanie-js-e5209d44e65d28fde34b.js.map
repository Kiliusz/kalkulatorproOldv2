{"version":3,"sources":["webpack:///./src/components/Heating/HeatingCalc.js","webpack:///./src/components/Heating/HeatingInfo.js","webpack:///./src/pages/Ogrzewanie.js","webpack:///./src/components/Basics/ResultSubHeader.js","webpack:///./src/components/Basics/DisplayResults.js","webpack:///./src/components/Basics/InputSelect.js","webpack:///./src/hardData/physicalProps.js"],"names":["StyledEntries","styled","FrameForInputs","withConfig","displayName","componentId","_ref","theme","mediaQ","tablet","StyledPower","StyledFlow","StyledWrapper","div","_ref2","HeatingCalc","state","mediumType","mediumTemp","pipeType","power","deltaTemp","flowCMPH","flowLPS","result","hasResult","validationMsg","lastHandler","handleMediumTypeChange","e","_this$setState2","id","target","value","_this$state","_this","validateDeltaTempPower","Calc","setState","calculateResults","_this$setState","validateFlow","handleMediumTempChange","_this$setState4","_this$state2","_this$setState3","handlePipeTypeChange","_this$setState5","_this$setState6","_this$state3","handlePowerChange","_this$state4","_this$setState7","handleDeltaTempChange","_this$state5","_this$setState8","handleFlowCMPHChange","handleFlowLPSChange","_this$setState9","_this$state6","flow","render","_this$state7","this","react_default","a","createElement","title","InputSelect","label","data","mediumTypes","onChange","InputNum","labelVal","pipeRoughness","ResultSubHeader","DisplayResults","React","Component","HeatingInfo","isInfoOpen","isPipesDimsOpen","isTipsOpen","handleClick","toggledFlag","newState","isKnowledgeOpen","handleCloseClick","Button","onClick","text","InfoText","isOpen","imgPath","helpIcon","folder","knowledge","Heating","layout","ContentWrapper","Heating_HeatingCalc","Heating_HeatingInfo","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","StyledP","p","grayextralight","primarygreen","_ref3","_ref4","children","StyledResult","isRoundDuct","map","item","style","isAboveAcceptable","color","key","Math","random","diameter","pressureDrop","speed","SelectStyled","select","InputLabel","values","Object","keys","react__WEBPACK_IMPORTED_MODULE_5___default","htmlFor","index","d","__webpack_exports__","typeOfBuilding","Woda ","Glik. etyl. 35% (-20°C)","Glik. etyl. 40% (-25°C)","Glik. prop. 37% (-20°C)","Glik. prop. 42% (-25°C)","Rury stalowe k=0,15 mm","Rury stalowe k=0,10 mm","Rury PP PN16 k=0,007 mm","Rury PP PN20 k=0,007 mm","Rury Pex k=0,007 mm","Rury żeliwne nowe k=0,25 mm","Budynki mieszkalne","Budynki biurowe i administracyjne","Hotele ","Domy towarowe","Szpitale ","Szkoły "],"mappings":"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","file":"component---src-pages-ogrzewanie-js-e5209d44e65d28fde34b.js","sourcesContent":["import React from \"react\";\r\nimport FrameForInputs from \"../Basics/FrameForInputs\";\r\nimport InputNum from \"../Basics/InputNum\";\r\nimport ResultSubHeader from \"../Basics/ResultSubHeader\";\r\nimport InputSelect from \"../Basics/InputSelect\";\r\nimport { pipeRoughness, mediumTypes } from \"../../hardData/physicalProps\";\r\nimport styled from \"styled-components\";\r\nimport * as Calc from \"../../hardData/physicalCalculations\";\r\nimport DisplayResults from \"../Basics/DisplayResults\";\r\n\r\nconst StyledEntries = styled(FrameForInputs)`\r\n  grid-template-columns: 1.5fr 1fr;\r\n  div:nth-of-type(3) {\r\n    grid-column: 1 / -1;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQ.tablet} {\r\n    grid-template-columns: 1fr 1fr 1.3fr;\r\n    div:nth-of-type(3) {\r\n      grid-column: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledPower = styled(FrameForInputs)`\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nconst StyledFlow = styled(FrameForInputs)`\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: grid;\r\n  padding: 0;\r\n  ${({ theme }) => theme.mediaQ.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 2rem;\r\n    > div:nth-of-type(1),\r\n    > div:nth-of-type(4) {\r\n      grid-column: 1/ -1;\r\n    }\r\n  }\r\n`;\r\n\r\nclass HeatingCalc extends React.Component {\r\n  state = {\r\n    mediumType: 4.2,\r\n    mediumTemp: 80,\r\n    pipeType: 0.15,\r\n    power: \"\",\r\n    deltaTemp: 20,\r\n    flowCMPH: \"\",\r\n    flowLPS: \"\",\r\n    result: \"\",\r\n    hasResult: false,\r\n    validationMsg: \"\",\r\n    lastHandler: \"\",\r\n  };\r\n\r\n  handleMediumTypeChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n    let { lastHandler, deltaTemp, power, mediumTemp, flowCMPH } = this.state;\r\n    if (lastHandler === \"power\" || lastHandler === \"deltaTemp\") {\r\n      if (this.validateDeltaTempPower(deltaTemp, power)) {\r\n        let flowCMPH = Calc.roundToDigits(\r\n          Calc.flowBasedOnPower(deltaTemp, power, value, mediumTemp),\r\n          3,\r\n        );\r\n        let flowLPS = (flowCMPH / 3600) * 1000;\r\n        this.setState({ flowCMPH, flowLPS });\r\n        this.calculateResults(id, value);\r\n      } else {\r\n        this.setState({ [id]: value });\r\n      }\r\n    } else {\r\n      if (this.validateFlow(flowCMPH)) {\r\n        this.calculateResults(id, value);\r\n      } else {\r\n        this.setState({ [id]: value });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMediumTempChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n    value = Calc.validateTemp(value, 150, 0);\r\n    let { lastHandler, deltaTemp, power, flowCMPH, mediumType } = this.state;\r\n    if (lastHandler === \"power\" || lastHandler === \"deltaTemp\") {\r\n      if (this.validateDeltaTempPower(deltaTemp, power)) {\r\n        let flowCMPH = Calc.roundToDigits(\r\n          Calc.flowBasedOnPower(deltaTemp, power, mediumType, value),\r\n          3,\r\n        );\r\n        let flowLPS = (flowCMPH / 3600) * 1000;\r\n        this.setState({ flowCMPH, flowLPS });\r\n        this.calculateResults(id, value);\r\n      } else {\r\n        this.setState({ [id]: value });\r\n      }\r\n    } else {\r\n      if (this.validateFlow(flowCMPH)) {\r\n        this.calculateResults(id, value);\r\n      } else {\r\n        this.setState({ [id]: value });\r\n      }\r\n    }\r\n  };\r\n\r\n  handlePipeTypeChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n    let { lastHandler, deltaTemp, power, flowCMPH } = this.state;\r\n    if (lastHandler === \"power\" || lastHandler === \"deltaTemp\") {\r\n      if (this.validateDeltaTempPower(deltaTemp, power)) {\r\n        this.calculateResults(id, value);\r\n      } else {\r\n        this.setState({ [id]: value });\r\n      }\r\n    } else {\r\n      if (this.validateFlow(flowCMPH)) {\r\n        this.calculateResults(id, value);\r\n      } else {\r\n        this.setState({ [id]: value });\r\n      }\r\n    }\r\n  };\r\n\r\n  handlePowerChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n    let { deltaTemp, mediumType, mediumTemp } = this.state;\r\n    if (this.validateDeltaTempPower(deltaTemp, value)) {\r\n      let flowCMPH = Calc.roundToDigits(\r\n        Calc.flowBasedOnPower(deltaTemp, value, mediumType, mediumTemp),\r\n        3,\r\n      );\r\n      let flowLPS = Calc.roundToDigits((flowCMPH / 3600) * 1000, 3);\r\n      this.setState({ flowCMPH, flowLPS, lastHandler: id });\r\n      this.calculateResults(id, value);\r\n    } else {\r\n      this.setState({ [id]: value });\r\n    }\r\n  };\r\n\r\n  handleDeltaTempChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n\r\n    let { power, mediumType, mediumTemp } = this.state;\r\n    if (this.validateDeltaTempPower(value, power)) {\r\n      let flowCMPH = Calc.roundToDigits(\r\n        Calc.flowBasedOnPower(value, power, mediumType, mediumTemp),\r\n        3,\r\n      );\r\n      let flowLPS = Calc.roundToDigits((flowCMPH / 3600) * 1000, 3);\r\n      this.setState({ flowCMPH, flowLPS, lastHandler: id });\r\n      this.calculateResults(id, value);\r\n    } else {\r\n      this.setState({ [id]: value });\r\n    }\r\n  };\r\n\r\n  handleFlowCMPHChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n    let flowLPS = Calc.roundToDigits((value / 3600) * 1000, 3);\r\n    this.setState({ power: \"\", flowCMPH: value, flowLPS, lastHandler: id });\r\n    if (this.validateFlow(value)) {\r\n      this.calculateResults(id, value);\r\n    }\r\n  };\r\n\r\n  handleFlowLPSChange = (e) => {\r\n    let id = e.target.id;\r\n    let value = e.target.value;\r\n    let flowCMPH = Calc.roundToDigits(value * 3.6, 3);\r\n    this.setState({ power: \"\", flowCMPH, flowLPS: value, lastHandler: id });\r\n    if (this.validateFlow(value)) {\r\n      this.calculateResults(id, value);\r\n    }\r\n  };\r\n\r\n  calculateResults = (id, value) => {\r\n    this.setState({ [id]: value }, () => {\r\n      let { pipeType, flowCMPH, mediumTemp, mediumType } = this.state;\r\n      let result = Calc.calcArrayOfPressDrop(\r\n        160,\r\n        pipeType,\r\n        flowCMPH,\r\n        mediumTemp,\r\n        mediumType,\r\n      );\r\n      this.setState({ result, validationMsg: \"\", hasResult: true });\r\n    });\r\n  };\r\n\r\n  validateFlow = (flow) => {\r\n    if (flow <= 0) {\r\n      this.setState({\r\n        validationMsg: \"Wprowadź przepływ większy od 0\",\r\n        hasResult: false,\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  validateDeltaTempPower = (deltaTemp, power) => {\r\n    if (deltaTemp <= 0 || deltaTemp > 101 || power <= 0) {\r\n      this.setState({\r\n        validationMsg: \"Podaj moc w KW i różnicę temp. w zakresie 1 - 100 K\",\r\n        hasResult: false,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      mediumType,\r\n      mediumTemp,\r\n      flowCMPH,\r\n      flowLPS,\r\n      power,\r\n      deltaTemp,\r\n      pipeType,\r\n      result,\r\n      hasResult,\r\n      validationMsg,\r\n      lastHandler,\r\n    } = this.state;\r\n\r\n    return (\r\n      <StyledWrapper>\r\n        <StyledEntries title=\"Dane wejściowe\">\r\n          <InputSelect\r\n            id=\"mediumType\"\r\n            label=\"Rodzaj czynnika\"\r\n            data={mediumTypes}\r\n            onChange={this.handleMediumTypeChange}\r\n            value={mediumType}\r\n          />\r\n          <InputNum\r\n            id=\"mediumTemp\"\r\n            labelVal=\"Temp. czynnika °C\"\r\n            value={mediumTemp}\r\n            onChange={this.handleMediumTempChange}\r\n          />\r\n          <InputSelect\r\n            id=\"pipeType\"\r\n            label=\"Rodzaj rury\"\r\n            data={pipeRoughness}\r\n            onChange={this.handlePipeTypeChange}\r\n            value={pipeType}\r\n          />\r\n        </StyledEntries>\r\n        <StyledPower title=\"Dobór na podstawie mocy\">\r\n          <InputNum\r\n            id=\"power\"\r\n            labelVal=\"Moc w kW\"\r\n            value={power}\r\n            onChange={this.handlePowerChange}\r\n          />\r\n          <InputNum\r\n            id=\"deltaTemp\"\r\n            value={deltaTemp}\r\n            labelVal=\"Różnica temp. °C\"\r\n            onChange={this.handleDeltaTempChange}\r\n          />\r\n        </StyledPower>\r\n        <StyledFlow title=\"Dobór na podstawie przepływu\">\r\n          <InputNum\r\n            onChange={this.handleFlowCMPHChange}\r\n            value={flowCMPH}\r\n            id=\"flowCMPH\"\r\n            labelVal=\"Przepływ w m3/h\"\r\n          />\r\n          <InputNum\r\n            onChange={this.handleFlowLPSChange}\r\n            value={flowLPS}\r\n            id=\"flowLPS\"\r\n            labelVal=\"Przepływ w dm3/s\"\r\n          />\r\n        </StyledFlow>\r\n\r\n        {hasResult && (\r\n          <FrameForInputs title=\"Wyniki\">\r\n            {result ? (\r\n              <div>\r\n                {lastHandler == \"power\" || lastHandler == \"deltaTemp\" ? (\r\n                  <ResultSubHeader>\r\n                    Dla <span>{power} kW</span>\r\n                    <span>&#916;t {deltaTemp} °C</span> <span>V={flowCMPH} m3/h</span>{\" \"}\r\n                    dobrano następujące średnice:\r\n                  </ResultSubHeader>\r\n                ) : (\r\n                  <ResultSubHeader>\r\n                    Dla{\" \"}\r\n                    <span>\r\n                      {flowCMPH} m3/h ~ {flowLPS} dm3/s{\" \"}\r\n                    </span>{\" \"}\r\n                    dobrano następujące średnice:\r\n                  </ResultSubHeader>\r\n                )}\r\n                <DisplayResults result={result} />\r\n              </div>\r\n            ) : (\r\n              <p>Zbyt duży przepływ dla wybranego typoszeregu rur</p>\r\n            )}\r\n          </FrameForInputs>\r\n        )}\r\n        {validationMsg && (\r\n          <FrameForInputs title=\"Komunikat\">{validationMsg}</FrameForInputs>\r\n        )}\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeatingCalc;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../Basics/Button\";\r\nimport InfoText from \"../Basics/InfoText\";\r\nimport helpIcon from \"../../assets/HelpIcons/help.svg\";\r\nimport folder from \"../../assets/HelpIcons/folder.svg\";\r\nimport knowledge from \"../../assets/HelpIcons/knowledge.svg\";\r\n\r\nclass HeatingInfo extends Component {\r\n  state = {\r\n    isInfoOpen: false,\r\n    isPipesDimsOpen: false,\r\n    isTipsOpen: false,\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    let toggledFlag = !this.state[e.target.id];\r\n    let newState = {\r\n      isInfoOpen: false,\r\n      isPipesDimsOpen: false,\r\n      isKnowledgeOpen: false,\r\n    };\r\n    newState[e.target.id] = toggledFlag;\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleCloseClick = () => {\r\n    let newState = {\r\n      isInfoOpen: false,\r\n      isPipesDimsOpen: false,\r\n      isKnowledgeOpen: false,\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button id=\"isInfoOpen\" onClick={this.handleClick} text=\"Instrukcja\" />\r\n        <Button id=\"isPipesDimsOpen\" onClick={this.handleClick} text=\"Typoszereg\" />\r\n        <Button id=\"isKnowledgeOpen\" onClick={this.handleClick} text=\"Wiedza\" />\r\n        <InfoText\r\n          onClick={this.handleCloseClick}\r\n          isOpen={this.state.isInfoOpen}\r\n          imgPath={helpIcon}\r\n        >\r\n          <p>\r\n            Wprowadź przepływ w m3/h lub w dm3/s aby program automatycznie dobrał średnicę\r\n            i policzył spadek jednostkowy.\r\n          </p>\r\n          <p>\r\n            Możesz także wprowadzić moc i różnicę temperatur - program obliczy\r\n            automatycznie przepływ i dobierze średnicę\r\n          </p>\r\n          <p>\r\n            Pamiętaj, że możesz zmienić temperaturę czynnika oraz jego rodzaj (woda,\r\n            glikol propylenowy, etylenowy)\r\n          </p>\r\n          <p>Dobór rur na podstawie kryterium jednostkowego spadku ciśnienia.</p>\r\n          <p>\r\n            Opór jednostkowy w Pa/m obliczany jest na podstawie wzoru Darcy-Weisbecha.\r\n            Chropowatość bezwzględna do wyboru wg użytkownika.\r\n          </p>\r\n          <p>Po podaniu mocy i różnicy temperatur pole przepływ wypełnia się samo.</p>\r\n          <p>\r\n            Pole przepływ w m3/h lub dm3/s można wypełniać wedle uznania. Po wpisaniu\r\n            jednej wartości, druga wartość zostanie automatycznie przeliczona.\r\n          </p>\r\n        </InfoText>\r\n        <InfoText\r\n          onClick={this.handleCloseClick}\r\n          isOpen={this.state.isPipesDimsOpen}\r\n          imgPath={folder}\r\n        >\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo dicta optio est\r\n            recusandae harum voluptates accusamus quam voluptate delectus!\r\n          </p>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Ratione, suscipit\r\n            quos debitis est totam obcaecati?\r\n          </p>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Ratione, suscipit\r\n            quos debitis est totam obcaecati?\r\n          </p>\r\n        </InfoText>\r\n        <InfoText\r\n          onClick={this.handleCloseClick}\r\n          isOpen={this.state.isKnowledgeOpen}\r\n          imgPath={knowledge}\r\n        >\r\n          <p>\r\n            Lorem ipsum dolor si amet, consectetur adipisicing elit. At mollitia molestiae\r\n            reiciendis explicabo doloribus unde magni. Quidem aliquid nihil in quisquam\r\n            similique qui numquam, inventore eos laudantium ea dolorem nostrum.\r\n          </p>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. At mollitia\r\n            molestiae reiciendis explicabo doloribus unde magni. Quidem aliquid nihil in\r\n            quisquam similique qui numquam, inventore eos laudantium ea dolorem nostrum.\r\n          </p>\r\n        </InfoText>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default HeatingInfo;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Styles/layout\";\r\nimport HeatingCalc from \"../components/Heating/HeatingCalc\";\r\nimport HeatingInfo from \"../components/Heating/HeatingInfo\";\r\nimport ContentWrapper from \"../components/Basics/ContentWrapper\";\r\n\r\nclass Heating extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <ContentWrapper>\r\n          <HeatingCalc />\r\n          <HeatingInfo />\r\n        </ContentWrapper>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default Heating;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledP = styled.p`\r\n  margin: 0 0 1rem 0;\r\n  font-size: 1.6rem;\r\n  line-height: 2.5rem;\r\n  color: ${({ theme }) => theme.grayextralight};\r\n  /* font-weight: 100; */\r\n\r\n  span {\r\n    margin: 0 1rem 0 1rem;\r\n    padding: 0 0.6rem 0 0.6rem;\r\n    border-left: 2px solid ${({ theme }) => theme.primarygreen};\r\n    border-right: 2px solid ${({ theme }) => theme.primarygreen};\r\n  }\r\n`;\r\n\r\nconst ResultSubHeader = ({ children }) => <StyledP>{children}</StyledP>;\r\n\r\nexport default ResultSubHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledResult = styled.p`\r\n  color: white;\r\n  /* margin: 0.7rem 0; */\r\n`;\r\n\r\nconst DisplayResults = ({ result, isRoundDuct }) => {\r\n  if (result) {\r\n    return result.map((item) => {\r\n      return (\r\n        <StyledResult\r\n          style={item.isAboveAcceptable ? { color: \"red\" } : null}\r\n          key={Math.random()}\r\n        >\r\n          {isRoundDuct ? \"φ\" : \"\"}\r\n          {item.diameter} &nbsp; - &nbsp;{item.pressureDrop} Pa/m &nbsp;-&nbsp;\r\n          {item.speed} m/s\r\n        </StyledResult>\r\n      );\r\n    });\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default DisplayResults;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SelectStyled = styled.select`\r\n  font-size: 1.5rem;\r\n  display: block;\r\n  margin: 0.5em 0;\r\n  padding: 0.3em 0.8em;\r\n  border: 1px solid gray;\r\n  border-radius: 10px;\r\n  height: 35px;\r\n  outline: none;\r\n  width: 100%;\r\n  :focus {\r\n    border-color: green;\r\n  }\r\n`;\r\nconst InputLabel = styled.label`\r\n  color: white;\r\n  display: block;\r\n  font-size: 1.4rem;\r\n  white-space: nowrap;\r\n`;\r\n\r\n//prop data is Object {text: value}\r\nconst InputSelect = ({ data, id, label, onChange, value }) => {\r\n  let values = Object.values(data);\r\n  let keys = Object.keys(data);\r\n  return (\r\n    <div>\r\n      <InputLabel htmlFor={id}>{label}</InputLabel>\r\n      <SelectStyled value={value} id={id} onChange={onChange}>\r\n        {values.map((label, index) => (\r\n          <option key={label} value={label}>\r\n            {keys[index]}\r\n          </option>\r\n        ))}\r\n      </SelectStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSelect;\r\n//\r\n","export const mediumTypes = {\r\n  \"Woda \": 4.2,\r\n  \"Glik. etyl. 35% (-20°C)\": 3.63,\r\n  \"Glik. etyl. 40% (-25°C)\": 3.54,\r\n  \"Glik. prop. 37% (-20°C)\": 3.77,\r\n  \"Glik. prop. 42% (-25°C)\": 3.7,\r\n};\r\n\r\nexport const pipeRoughness = {\r\n  \"Rury stalowe k=0,15 mm\": 0.15,\r\n  \"Rury stalowe k=0,10 mm\": 0.1,\r\n  \"Rury PP PN16 k=0,007 mm\": 0.007001,\r\n  \"Rury PP PN20 k=0,007 mm\": 0.007002,\r\n  \"Rury Pex k=0,007 mm\": 0.007003,\r\n  \"Rury żeliwne nowe k=0,25 mm\": 0.25,\r\n};\r\n\r\nexport const typeOfBuilding = {\r\n  \"Budynki mieszkalne\": \"1\",\r\n  \"Budynki biurowe i administracyjne\": \"2\",\r\n  \"Hotele \": \"3\",\r\n  \"Domy towarowe\": \"4\",\r\n  \"Szpitale \": \"5\",\r\n  \"Szkoły \": \"6\",\r\n};\r\n"],"sourceRoot":""}