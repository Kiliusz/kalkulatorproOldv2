{"version":3,"sources":["webpack:///./src/hardData/physicalProps.js","webpack:///./src/components/Basics/InputSelect.js","webpack:///./src/components/Basics/ButtonRemove.js","webpack:///./src/components/Basics/ButtonAdd.js","webpack:///./src/components/Water/WaterResults.js","webpack:///./src/components/Water/WaterCalc.js","webpack:///./src/components/Water/WaterInfo.js","webpack:///./src/pages/Water.js"],"names":["mediumTypes","pipeRoughness","typeOfBuilding","SelectStyled","styled","select","InputLabel","label","InputSelect","data","id","onChange","value","values","Object","keys","htmlFor","map","index","key","StyledRemoveButton","button","theme","graylight","grayextralight","graydark","ButtonRemove","props","className","onClick","StyledAddButton","primarygreen","ButtonAdd","StyledTable","table","mediaQ","tablet","WaterResults","render","tHead","this","tHeaders","newArray","Array","isArray","labelsMobile","object","push","tData","val","data-label","data-label2","length","Component","StyledWrapper","div","FrameForAppliances","FrameForInputs","FrameForConditions","FrameForResults","FrameForResultTable","ResultsParagraphs","p","ResetButton","Button","WaterCalc","state","basin","sink","rinser","tub","shower","wash","dish","urinal","sumOfQn","calculatedQ","calculatedQinCMPH","buildingType","pipeType","speedFactor","result","resultList","rowId","handleAppliancesChange","e","target","makeCalculations","setState","hasInputAppliance","Calc","handleReset","addResultToTable","row","handleRemoveResultFromTable","filter","title","InputNum","labelVal","text","WaterInfo","isInfoOpen","isPipesDimsOpen","isTipsOpen","handleClick","toggledFlag","newState","isKnowledgeOpen","handleCloseClick","InfoText","isOpen","imgPath","helpIcon","folder","PipesList","pipes","knowledge","Water","ContentWrapper","React"],"mappings":"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","file":"component---src-pages-water-js-5ca4b2e5fc37814fd374.js","sourcesContent":["export const mediumTypes = {\r\n  \"Woda \": 4.2,\r\n  \"Glik. etyl. 35% (-20°C)\": 3.63,\r\n  \"Glik. etyl. 40% (-25°C)\": 3.54,\r\n  \"Glik. prop. 37% (-20°C)\": 3.77,\r\n  \"Glik. prop. 42% (-25°C)\": 3.7,\r\n};\r\n\r\nexport const pipeRoughness = {\r\n  \"Rury stalowe k=0,15 mm\": 0.15,\r\n  \"Rury stalowe k=0,10 mm\": 0.1,\r\n  \"Rury PP PN16 k=0,007 mm\": 0.007001,\r\n  \"Rury PP PN20 k=0,007 mm\": 0.007002,\r\n  \"Rury Pex k=0,007 mm\": 0.007003,\r\n  \"Rury żeliwne nowe k=0,25 mm\": 0.25,\r\n};\r\n\r\nexport const typeOfBuilding = {\r\n  \"Budynki mieszkalne\": \"1\",\r\n  \"Budynki biurowe i administracyjne\": \"2\",\r\n  \"Hotele \": \"3\",\r\n  \"Domy towarowe\": \"4\",\r\n  \"Szpitale \": \"5\",\r\n  \"Szkoły \": \"6\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SelectStyled = styled.select`\r\n  font-size: 1.5rem;\r\n  display: block;\r\n  margin: 0.5em 0;\r\n  padding: 0.3em 0.8em;\r\n  border: 1px solid gray;\r\n  border-radius: 10px;\r\n  height: 35px;\r\n  outline: none;\r\n  width: 100%;\r\n  :focus {\r\n    border-color: green;\r\n  }\r\n`;\r\nconst InputLabel = styled.label`\r\n  color: white;\r\n  display: block;\r\n  font-size: 1.4rem;\r\n  white-space: nowrap;\r\n`;\r\n\r\n//prop data is Object {text: value}\r\nconst InputSelect = ({ data, id, label, onChange, value }) => {\r\n  let values = Object.values(data);\r\n  let keys = Object.keys(data);\r\n  return (\r\n    <div>\r\n      <InputLabel htmlFor={id}>{label}</InputLabel>\r\n      <SelectStyled value={value} id={id} onChange={onChange}>\r\n        {values.map((label, index) => (\r\n          <option key={label} value={label}>\r\n            {keys[index]}\r\n          </option>\r\n        ))}\r\n      </SelectStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSelect;\r\n//\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledRemoveButton = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  padding: 1.6rem;\r\n  background: ${({ theme }) => theme.graylight};\r\n  border-radius: 999rem;\r\n  font-size: 1.5rem;\r\n  transform: rotate(45deg);\r\n  :hover {\r\n    background: ${({ theme }) => theme.grayextralight};\r\n  }\r\n  &:after,\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    background-color: ${({ theme }) => theme.graydark};\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  &:before {\r\n    height: 1.7rem;\r\n    width: 0.2rem;\r\n  }\r\n\r\n  &:after {\r\n    height: 0.2rem;\r\n    width: 1.7rem;\r\n  }\r\n`;\r\n\r\nconst ButtonRemove = (props) => (\r\n  <StyledRemoveButton className={props.className} onClick={props.onClick} />\r\n);\r\n\r\nexport default ButtonRemove;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  border: none;\r\n  margin: 0.1rem 0;\r\n  cursor: pointer;\r\n  padding: 1.8rem;\r\n  background: ${({ theme }) => theme.primarygreen};\r\n  border-radius: 999rem;\r\n  position: relative;\r\n  width: 30px;\r\n  height: 30px;\r\n  :hover {\r\n    background: #005950;\r\n  }\r\n  &:after,\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    background-color: white;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  &:before {\r\n    height: 1.8rem;\r\n    width: 0.2rem;\r\n  }\r\n\r\n  &:after {\r\n    height: 0.2rem;\r\n    width: 1.8rem;\r\n  }\r\n`;\r\n\r\nconst ButtonAdd = (props) => {\r\n  return <StyledAddButton onClick={props.onClick} />;\r\n};\r\n\r\nexport default ButtonAdd;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonRemove from \"../Basics/ButtonRemove\";\r\n\r\nconst StyledTable = styled.table`\r\n  table-layout: fixed;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  padding: 0.5rem 1rem;\r\n  thead,\r\n  tbody,\r\n  th,\r\n  td,\r\n  tr {\r\n    display: block;\r\n  }\r\n\r\n  thead {\r\n    display: none;\r\n    font-weight: bold;\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3));\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      display: table-header-group;\r\n    }\r\n  }\r\n\r\n  tbody {\r\n    position: relative;\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      display: table-row-group;\r\n    }\r\n  }\r\n  tr {\r\n    margin-bottom: 0.5rem;\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      display: table-row;\r\n    }\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding: 0.5rem 1rem;\r\n    position: relative;\r\n    font-size: 1.5rem;\r\n    text-align: right;\r\n    border: 1px solid ${({ theme }) => theme.graylight};\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      display: table-cell;\r\n    }\r\n  }\r\n\r\n  tbody td:before {\r\n    position: absolute;\r\n    content: attr(data-label);\r\n    top: 10px;\r\n    left: 10px;\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  tbody td:after {\r\n    position: absolute;\r\n    content: attr(data-label2);\r\n    top: 10px;\r\n    left: 90px;\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  tr:nth-child(even) {\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2));\r\n  }\r\n\r\n  tbody td:last-child {\r\n    border: none;\r\n    padding: 1rem;\r\n    background-image: none;\r\n    ${({ theme }) => theme.mediaQ.tablet} {\r\n      border: 1px solid ${({ theme }) => theme.graylight};\r\n    }\r\n  }\r\n`;\r\n\r\nclass WaterResults extends Component {\r\n  render() {\r\n    let tHead = this.props.tHeaders;\r\n    let newArray = [[], tHead];\r\n    tHead = Array.isArray(tHead[0]) ? tHead : newArray;\r\n    let labelsMobile = [];\r\n\r\n    return (\r\n      <StyledTable>\r\n        <thead>\r\n          {tHead.map((object, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                {object.map((label, index) => {\r\n                  labelsMobile.push(label);\r\n                  return <th key={index}>{label}</th>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </thead>\r\n\r\n        <tbody>\r\n          {this.props.tData.map((data, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                {data.map((val, index) => {\r\n                  return (\r\n                    <td\r\n                      data-label={labelsMobile[index]}\r\n                      data-label2={labelsMobile[index + labelsMobile.length / 2]}\r\n                      key={index}\r\n                    >\r\n                      {val}\r\n                    </td>\r\n                  );\r\n                })}\r\n                <td key={index}>\r\n                  <ButtonRemove onClick={() => this.props.onClick(data[0])} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </StyledTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WaterResults;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FrameForInputs from \"../Basics/FrameForInputs\";\r\nimport { typeOfBuilding, pipeRoughness } from \"../../hardData/physicalProps\";\r\nimport InputNum from \"../Basics/InputNum\";\r\nimport InputSelect from \"../Basics/InputSelect\";\r\nimport Button from \"../Basics/Button\";\r\nimport ButtonRemove from \"../Basics/ButtonRemove\";\r\nimport ButtonAdd from \"../Basics/ButtonAdd\";\r\nimport * as Calc from \"../../hardData/physicalCalculations\";\r\nimport WaterResults from \"./WaterResults\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: grid;\r\n  padding: 0;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQ.tablet} {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 15px;\r\n    > div:nth-of-type(3),\r\n    > div:nth-of-type(4) {\r\n      grid-column: 1/ -1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FrameForAppliances = styled(FrameForInputs)`\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n`;\r\n\r\nconst FrameForConditions = styled(FrameForInputs)`\r\n  grid-template-columns: 1.5fr 1fr;\r\n  div:nth-of-type(1) {\r\n    grid-column: 1 / -1;\r\n  }\r\n`;\r\n\r\nconst FrameForResults = styled(FrameForInputs)`\r\n  position: relative;\r\n  grid-template-columns: 1fr;\r\n`;\r\nconst FrameForResultTable = styled(FrameForInputs)`\r\n  padding: 1rem;\r\n`;\r\n\r\nconst ResultsParagraphs = styled.p`\r\n  margin: 0.6rem 0;\r\n  color: white;\r\n  font-weight: 400;\r\n  span {\r\n    font-weight: 500;\r\n    font-size: 1.7rem;\r\n  }\r\n`;\r\n\r\nconst ResetButton = styled(Button)`\r\n  position: absolute;\r\n  right: 0px;\r\n  top: 1rem;\r\n`;\r\n\r\nclass WaterCalc extends Component {\r\n  state = {\r\n    basin: 0,\r\n    sink: 0,\r\n    rinser: 0,\r\n    tub: 0,\r\n    shower: 0,\r\n    wash: 0,\r\n    dish: 0,\r\n    urinal: 0,\r\n    sumOfQn: \"0,00\",\r\n    calculatedQ: \"0,00\",\r\n    calculatedQinCMPH: \"0,00\",\r\n    buildingType: \"1\",\r\n    pipeType: 0.007002,\r\n    speedFactor: 1.5,\r\n    result: \"\",\r\n    resultList: [],\r\n    rowId: 1,\r\n  };\r\n\r\n  handleAppliancesChange = (e) => {\r\n    let id = e.target.id;\r\n    let val = e.target.value;\r\n    this.makeCalculations(id, val);\r\n  };\r\n\r\n  makeCalculations = (id, val) => {\r\n    this.setState({ [id]: val }, () => {\r\n      let {\r\n        basin,\r\n        sink,\r\n        rinser,\r\n        tub,\r\n        shower,\r\n        wash,\r\n        dish,\r\n        urinal,\r\n        buildingType,\r\n        pipeType,\r\n        speedFactor,\r\n      } = this.state;\r\n      if (this.hasInputAppliance() && speedFactor > 0) {\r\n        let sumOfQn = Calc.sumOfQn(basin, sink, rinser, tub, shower, wash, dish, urinal);\r\n        sumOfQn = Calc.roundToDigits(sumOfQn, 2);\r\n        let calculatedQ = Calc.calcQbasedOnQn(sumOfQn, buildingType);\r\n        let calculatedQinCMPH = Calc.lpsToCmph(calculatedQ);\r\n        let result = Calc.getProperPipeDepOnMaxSpeed(\r\n          speedFactor,\r\n          calculatedQinCMPH,\r\n          pipeType,\r\n        );\r\n        this.setState({ result, calculatedQ, calculatedQinCMPH, sumOfQn });\r\n      } else {\r\n        this.setState({\r\n          [id]: val,\r\n          result: \"\",\r\n          sumOfQn: \"0,00\",\r\n          calculatedQ: \"0,00\",\r\n          calculatedQinCMPH: \"0,00\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  hasInputAppliance = () => {\r\n    let { basin, sink, rinser, tub, shower, wash, dish, urinal } = this.state;\r\n    return (basin || sink || rinser || tub || shower || wash || dish || urinal) <= 0\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      basin: 0,\r\n      sink: 0,\r\n      rinser: 0,\r\n      tub: 0,\r\n      shower: 0,\r\n      wash: 0,\r\n      dish: 0,\r\n      urinal: 0,\r\n      sumOfQn: \"0,00\",\r\n      calculatedQ: \"0,00\",\r\n      calculatedQinCMPH: \"0,00\",\r\n      result: \"\",\r\n    });\r\n  };\r\n\r\n  addResultToTable = () => {\r\n    let {\r\n      rowId,\r\n      sumOfQn,\r\n      result,\r\n      calculatedQ,\r\n      calculatedQinCMPH,\r\n      resultList,\r\n    } = this.state;\r\n    let row = [rowId, sumOfQn, calculatedQ, calculatedQinCMPH, result[0], result[1]];\r\n    this.setState({ resultList: [...resultList, row], rowId: rowId + 1 });\r\n  };\r\n\r\n  handleRemoveResultFromTable = (rowId) => {\r\n    let { resultList } = this.state;\r\n    resultList = resultList.filter((result) => {\r\n      return result[0] !== rowId;\r\n    });\r\n    if (resultList.length < 1) {\r\n      this.setState({ resultList: resultList, rowId: 1 });\r\n    } else {\r\n      this.setState({ resultList: resultList });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      basin,\r\n      sink,\r\n      rinser,\r\n      tub,\r\n      shower,\r\n      wash,\r\n      dish,\r\n      urinal,\r\n      buildingType,\r\n      pipeType,\r\n      speedFactor,\r\n      sumOfQn,\r\n      result,\r\n      calculatedQ,\r\n      calculatedQinCMPH,\r\n      resultList,\r\n    } = this.state;\r\n\r\n    return (\r\n      <StyledWrapper>\r\n        <FrameForAppliances title=\"Przybory\">\r\n          <InputNum\r\n            id=\"basin\"\r\n            labelVal=\"Umywalka\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={basin}\r\n          />\r\n          <InputNum\r\n            id=\"sink\"\r\n            labelVal=\"Zlewozm.\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={sink}\r\n          />\r\n          <InputNum\r\n            id=\"rinser\"\r\n            labelVal=\"Płuczka\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={rinser}\r\n          />\r\n          <InputNum\r\n            id=\"tub\"\r\n            labelVal=\"Wanna\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={tub}\r\n          />\r\n          <InputNum\r\n            id=\"shower\"\r\n            labelVal=\"Natrysk\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={shower}\r\n          />\r\n          <InputNum\r\n            id=\"wash\"\r\n            labelVal=\"Pralka\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={wash}\r\n          />\r\n          <InputNum\r\n            id=\"dish\"\r\n            labelVal=\"Zmywarka\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={dish}\r\n          />\r\n          <InputNum\r\n            id=\"urinal\"\r\n            labelVal=\"Pisuar\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={urinal}\r\n          />\r\n        </FrameForAppliances>\r\n\r\n        <FrameForConditions title=\"Warunki\">\r\n          <InputSelect\r\n            id=\"buildingType\"\r\n            label=\"Rodzaj Budynku\"\r\n            data={typeOfBuilding}\r\n            onChange={this.handleAppliancesChange}\r\n            value={buildingType}\r\n          />\r\n          <InputSelect\r\n            id=\"pipeType\"\r\n            label=\"Rodzaj rury\"\r\n            data={pipeRoughness}\r\n            onChange={this.handleAppliancesChange}\r\n            value={pipeType}\r\n          />\r\n          <InputNum\r\n            id=\"speedFactor\"\r\n            labelVal=\"Kryt. prędk. m/s\"\r\n            onChange={this.handleAppliancesChange}\r\n            value={speedFactor}\r\n          />\r\n        </FrameForConditions>\r\n\r\n        <FrameForResults title=\"Wyniki\">\r\n          <ResetButton id=\"reset\" onClick={this.handleReset} text=\"Reset\" />\r\n          {result && <ButtonAdd id=\"add\" onClick={this.addResultToTable} />}\r\n          <ResultsParagraphs>\r\n            Σqn =<span> {sumOfQn} l/s</span>\r\n          </ResultsParagraphs>\r\n          <ResultsParagraphs>\r\n            Qobl = <span> {calculatedQ} l/s</span> ~{\" \"}\r\n            <span> {calculatedQinCMPH} m3/h</span>\r\n          </ResultsParagraphs>\r\n          {result && (\r\n            <ResultsParagraphs>\r\n              <span>\r\n                {result[0]} | w={result[1]} m/s\r\n              </span>\r\n            </ResultsParagraphs>\r\n          )}\r\n        </FrameForResults>\r\n\r\n        {resultList[0] && (\r\n          <FrameForResultTable title=\"Dobory\">\r\n            {resultList && (\r\n              <WaterResults\r\n                tHeaders={[\r\n                  [\"Id\", \"Suma qn\", \"Qobl\", \"Qobl\", \"Średnica\", \"Prędkość\", \"Usuń\"],\r\n                  [\"[-]\", \"[dm3/s]\", \"[dm3/s]\", \"[m3/h]\", \"[mm]\", \"[m/s]\", \"\"],\r\n                ]}\r\n                tData={resultList}\r\n                onClick={this.handleRemoveResultFromTable}\r\n              />\r\n            )}\r\n          </FrameForResultTable>\r\n        )}\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\nexport default WaterCalc;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../Basics/Button\";\r\nimport InfoText from \"../Basics/InfoText\";\r\nimport helpIcon from \"../../assets/HelpIcons/help.svg\";\r\nimport folder from \"../../assets/HelpIcons/folder.svg\";\r\nimport knowledge from \"../../assets/HelpIcons/knowledge.svg\";\r\nimport PipesList from \"../Basics/PipesList\";\r\nimport * as pipes from \"../../hardData/pipes\";\r\n\r\nclass WaterInfo extends Component {\r\n  state = {\r\n    isInfoOpen: false,\r\n    isPipesDimsOpen: false,\r\n    isTipsOpen: false\r\n  };\r\n\r\n  handleClick = e => {\r\n    let toggledFlag = !this.state[e.target.id];\r\n    let newState = {\r\n      isInfoOpen: false,\r\n      isPipesDimsOpen: false,\r\n      isKnowledgeOpen: false\r\n    };\r\n    newState[e.target.id] = toggledFlag;\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleCloseClick = () => {\r\n    let newState = {\r\n      isInfoOpen: false,\r\n      isPipesDimsOpen: false,\r\n      isKnowledgeOpen: false\r\n    };\r\n    this.setState(newState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button id=\"isInfoOpen\" onClick={this.handleClick} text=\"Instrukcja\" />\r\n        <Button\r\n          id=\"isPipesDimsOpen\"\r\n          onClick={this.handleClick}\r\n          text=\"Typoszereg\"\r\n        />\r\n        <Button id=\"isKnowledgeOpen\" onClick={this.handleClick} text=\"Wiedza\" />\r\n        <InfoText\r\n          onClick={this.handleCloseClick}\r\n          isOpen={this.state.isInfoOpen}\r\n          imgPath={helpIcon}\r\n        >\r\n          <p>\r\n            Wprowadź ilość przyborów sanitarnych, ewentualnie zmień rodzaj\r\n            budynku, rodzaj rur lub zmień kryterium prędkości - program sam\r\n            obliczy przepływy i dobierze średnicę rury\r\n          </p>\r\n          <p>Dobór średnic obliczany jest na podstawie kryterium prędkości</p>\r\n          <p>\r\n            Dla zaworu czerpalnego należy skorzystać z pola pisuar (te same\r\n            wypływy normatywne)\r\n          </p>\r\n          <p>\r\n            Dobór średnic na podstawie własnego przepływu można wykonać w\r\n            zakładce ogrzewanie\r\n          </p>\r\n        </InfoText>\r\n        <InfoText\r\n          onClick={this.handleCloseClick}\r\n          isOpen={this.state.isPipesDimsOpen}\r\n          imgPath={folder}\r\n        >\r\n          <h3>Rury stalowe</h3>\r\n          <PipesList pipes={pipes.steelPipesDiameters} />\r\n          <h3>Rury PP PN20</h3>\r\n          <PipesList pipes={pipes.ppPipesDiametersPN20} />\r\n          <h3>Rury PP PN16</h3>\r\n          <PipesList pipes={pipes.ppPipesDiametersPN16} />\r\n          <h3>Rury PEX</h3>\r\n          <PipesList pipes={pipes.pexPipesDiameters} />\r\n        </InfoText>\r\n        <InfoText\r\n          onClick={this.handleCloseClick}\r\n          isOpen={this.state.isKnowledgeOpen}\r\n          imgPath={knowledge}\r\n        >\r\n          <p>\r\n            Wypływy normatywne\r\n            <ul>\r\n              <li>Umywalka - 0,07 dm3/s</li>\r\n              <li>Zlewozmywak - 0,07 dm3/s</li>\r\n              <li>Płuczka zbiornikowa - 0,13 dm3/s</li>\r\n              <li>Wanna - 0,15 dm3/s</li>\r\n              <li>Natrysk - 0,15 dm3/s</li>\r\n              <li>Pralka - 0,25 dm3/s</li>\r\n              <li>Zmywarka - 0,15 dm3/s</li>\r\n              <li>Pisuar / Zawór czerpalny - 0,3 dm3/s</li>\r\n            </ul>\r\n          </p>\r\n        </InfoText>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default WaterInfo;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Styles/layout\";\r\nimport ContentWrapper from \"../components/Basics/ContentWrapper\";\r\nimport WaterCalc from \"../components/Water/WaterCalc\";\r\nimport WaterInfo from \"../components/Water/WaterInfo\";\r\n\r\nclass Water extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <ContentWrapper>\r\n          <WaterCalc />\r\n          <WaterInfo />\r\n        </ContentWrapper>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nexport default Water;\r\n"],"sourceRoot":""}